#!/bin/bash
echo "<< -----------  Run UDF << LSO Stickman V2>> Tests ---------------- >> "

# This script exercises the Aerospike LSO Functions
export UNS="test"
export USET="set"
export UFILE="LsoStoneman"
export UCHUNK=2000
export UKEY="LSO_ABC"
export LSOBIN="LsoBin"
export FUN_CR8="stackCreate"
export FUN_INS="stackPush"
export FUN_INSWU="stackPushWithUDF"
export FUN_SRCH="stackPeek"
export FUN_SRCHWU="stackPeekWithUDF"
# export ARGLIST='[$LSOBIN,$UNS,$USET,$UCHUNK,1]'
export ARGLIST='["LsoBin","test","set",2000,1]'

# Use this ONLY if we need to register the UDF
# ascli udf-put $UFILE.lua

# Should work WITH and WITHOUT having an existing Record.
echo ">> CREATE (Simple Put: key $UKEY) for use with UDF"
ascli put $UNS $USET $UKEY '{"LSOTestBin": "Stack Test TWO"}'
#-----
echo ">> Check CREATE (key $UKEY) with get"
ascli get $UNS $USET $UKEY
#-----

URLID=1000
URLID_MOD=10
CREATED=1400000000
METH_A=50000
METH_B=7000000
STATUS=1

echo "For USERS( count = $NUM_USERS ) Perform ( count = 200 ) Pushes"

USERID=2000
NUM_PUSHES=5001;
I=0;
while [ $I -lt $NUM_PUSHES ]; do
  TUPLE="[${URLID},${CREATED},${METH_A},${METH_B},${STATUS}]"
  ascli udf-record-apply $UNS $USET $USERID $UFILE stackPush $LSOBIN $TUPLE >/dev/null
  I=$[${I}+1];
  if [ $[${I}%${URLID_MOD}] -eq 0 ]; then URLID=$[${URLID}+1]; fi
  CREATED=$[${CREATED}+1];
  METH_A=$[${METH_A}+1];
  METH_B=$[${METH_B}+1];
  STATUS=$[${STATUS}+1];
done

for SIZE in 1000 2000 3000 4000 5000; do
  ascli udf-record-apply $UNS $USET $USERID $UFILE stackPeek $LSOBIN $SIZE | tr \] \\n | grep \\[ | wc -l
done
