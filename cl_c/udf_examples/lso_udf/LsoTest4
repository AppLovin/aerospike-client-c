#!/bin/bash
echo "<< -----------  Run Basic AS Large Stack Object Test -------------- >> "
echo "<< -----------  <<<<    LSO Test 4: Large Push >>>>> -------------- >> "

export UNS="test"
export USET="set"
export UKEY="abc"
export UFILE="LsoStoneman"
export UCHUNK=2000

export UNS="test"
export USET="set"
# This script exercises the Aerospike LSO Functions
#
export UKEY="LSO_ABC"
export LSOBIN="LsoBin"
export FUN_CR8="stackCreate"
export FUN_INS="stackPush"
export FUN_INSWU="stackPushWithUDF"
export FUN_SRCH="stackPeek"
export FUN_SRCHWU="stackPeekWithUDF"
#############################
## Stack Create Parameters ##
#############################
# PageMode can be "List" or "Binary"
# ByteEntrySize is needed for "Binary" mode.  Size of the packed item
# (e.g. StumbleUpon data is packed into an 18 byte item)
# HotListSize is a number -- the max size of the Hot List
# Realistic sizes are 50 to 200.  Try lower to exercise the system.
# HotListTransfer is a number -- the amount of the Hot List to age out.
# ==> It MUST be LESS than the HotListSize (it is usually half of HLS)
export CREATE_ARGLIST='{"PageMode":"List","HotListSize":120}'

URLID=1000
URLID_MOD=10
CREATED=1400000000
METH_A=50000
METH_B=7000000
STATUS=1


USERID=2000
NUM_USERS=1
NUM_PUSHES=200;
U=0;
echo "For USERS( count = $NUM_USERS ) Perform ( count = $NUM_PUSHES ) Pushes"
while [ $U -lt $NUM_USERS ]; do
  echo ">> Call UDF Stack Create: $USERID $LSOBIN $CREATE_ARGLIST << "
  ascli udf-record-apply $UNS $USET $USERID $UFILE stackCreate $LSOBIN $CREATE_ARGLIST

  I=0;
  while [ $I -lt $NUM_PUSHES ]; do
#   echo URL: $USERID: $URLID CREATED: $CREATED METH_A: $METH_A METH_B: $METH_B STATUS: $STATUS
    TUPLE="[${URLID},${CREATED},${METH_A},${METH_B},${STATUS}]"
    ascli udf-record-apply $UNS $USET $USERID $UFILE stackPush $LSOBIN $TUPLE
    I=$[${I}+1];
    if [ $[${I}%${URLID_MOD}] -eq 0 ]; then
      URLID=$[${URLID}+1];
    fi
    CREATED=$[${CREATED}+1];
    METH_A=$[${METH_A}+1];
    METH_B=$[${METH_B}+1];
    STATUS=$[${STATUS}+1];
  done
  echo ">> Call UDF StackPeek(): Key($USERID) $UFILE stackPeek $LSOBIN 0"
  ascli udf-record-apply $UNS $USET $USERID $UFILE stackPeek  $LSOBIN 0

  USERID=$[${USERID}+1];
  U=$[${U}+1];
done
echo "Sleep for 5 seconds"
sleep 5;
# =========================
USERID=2000
echo "<< >> << >> REMOVE ALL RECORDs << >> << >> "
U=0;
while [ $U -lt $NUM_USERS ]; do
  echo "ascli remove $UNS $USET $USERID"
  ascli remove $UNS $USET $USERID
  USERID=$[${USERID}+1];
  U=$[${U}+1];
done
# =========================

# ########################################################################
echo ">>>>  EXIT <<<<<"
exit 0
# ########################################################################
