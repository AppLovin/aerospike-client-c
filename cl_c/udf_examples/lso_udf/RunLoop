#!/bin/bash
echo "<< -----------  Run UDF << LSO Stickman V2>> Tests ---------------- >> "

export UNS="test"
export USET="set"
export UKEY="abc"
export UFILE="LsoStickman"
export UCHUNK=2000

export UNS="test"
export USET="set"
# This script exercises the Aerospike LSO Functions
#
export UKEY="LSO_ABC"
export LSOBIN="LsoBin"
export UFILE="LsoStickman"
export FUN_CR8="stackCreate"
export FUN_INS="stackPush"
export FUN_INSWU="stackPushWithUDF"
export FUN_SRCH="stackPeek"
export FUN_SRCHWU="stackPeekWithUDF"
# export ARGLIST='[$LSOBIN,$UNS,$USET,$UCHUNK,1]'
export ARGLIST='["LsoBin","test","set",2000,1]'

# Use this ONLY if we need to register the UDF
# ascli udf-put $UFILE.lua

# Should work WITH and WITHOUT having an existing Record.
# echo ">> CREATE (Simple Put: key $UKEY) for use with UDF"
# ascli put $UNS $USET $UKEY '{"LSOTestBin": "Stack Test TWO"}'
#-----
# echo ">> Check CREATE (key $UKEY) with get"
# ascli get $UNS $USET $UKEY
#-----

echo ">> Call UDF Stack Create: $LSOBIN $ARGLIST << "
ascli udf-record-apply $UNS $USET $UKEY $UFILE stackCreate $LSOBIN $ARGLIST

URLID=1000
URLID_MOD=10
CREATED=1400000000
METH_A=50000
METH_B=7000000
STATUS=1

NUM=100
I=0;
while [ $I -lt $NUM ]; do
  echo URL: $URLID CREATED: $CREATED METH_A: $METH_A METH_B: $METH_B STATUS: $STATUS
  TUPLE="[${URLID},${CREATED},${METH_A},${METH_B},${STATUS}]"
  ascli udf-record-apply $UNS $USET $UKEY $UFILE stackPush $LSOBIN $TUPLE
  I=$[${I}+1];
  if [ $[${I}%${URLID_MOD}] -eq 0 ]; then
    URLID=$[${URLID}+1];
  fi
  CREATED=$[${CREATED}+1];
  METH_A=$[${METH_A}+1];
  METH_B=$[${METH_B}+1];
  STATUS=$[${STATUS}+1];
done

echo ">> Call UDF StackPeek(): Key($UKEY) $UFILE stackPeek $LSOBIN 0"
ascli udf-record-apply $UNS $USET $UKEY $UFILE stackPeek  $LSOBIN 0

echo ">> Check PROGRESS with GET!!! <<"
ascli get $UNS $USET $UKEY

echo "<< >> << >> REMOVE THE RECORD << >> << >> "
ascli remove $UNS $USET $UKEY

echo ">> VERIFY DELETE (GET SHOULD RETURN ERROR)  <<"
ascli get $UNS $USET $UKEY

# ########################################################################
echo ">>>>  EXIT <<<<<"
exit 0
# ########################################################################
